drop procedure IF EXISTS p2;
DELIMITER $$
-- create procedure p2(IN start_time int, IN end_time int, IN logo int)
 create procedure p2(IN start_time date, IN end_time date, IN logo int)
BEGIN

case when logo =0 or logo =10 then
select tt1.早出港始发航班正常率, tt2.过站航班放行正常率 from (select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 早出港始发航班正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子正常航班, t2.p2 as 分母全部航班  from (select count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and Early_depar_Initial = 'B' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay = '延误')) as t2) as tt1 inner join (select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子放行正常航班, t2.p2 as 分母放行全部航班 from (select count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常') as t1 , (select count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常') as t2) as tt2;
when logo =11 then
-- 早出港始发航班起飞正常率，12月数据与公示一样,公示数据  ,要包含6小时内取消的，作为分母
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 早出港始发航班正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子正常航班, t2.p2 as 分母全部航班  from (select count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and Early_depar_Initial = 'B' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay = '延误')) as t2;
when logo =12 then
-- 过站航班放行正常率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子放行正常航班, t2.p2 as 分母放行全部航班 from (select count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常') as t1 , (select count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常') as t2;
else BEGIN END; end case;

case when logo =0 or logo =20 then
-- 平均滑行时间（分钟）
select tt1.进港平均滑入时间保留一位小数, tt2.出港平均滑出时间保留一位小数 from (select round(avg(timestampdiff(minute, ATA, Actual_arrival)),1) as 进港平均滑入时间保留一位小数, avg(timestampdiff(minute, ATA, Actual_arrival)) as 进港平均滑入时间分钟 from hangban_pek where Actual_arrival is not null and ATA is not null and timestampdiff(minute, ATA, Actual_arrival) between 0 and 150 and in_out_sign='进港' and date between start_time and end_time) as tt1 inner join (select round(avg(timestampdiff(minute, Actual_depart, Actual_take_off)),1) as 出港平均滑出时间保留一位小数, avg(timestampdiff(minute, Actual_depart, Actual_take_off)) as 出港平均滑出时间分钟 from hangban_pek where in_out_sign='出港' and Cancel_Status = '正常' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off) between 0 and 150 and date between start_time and end_time) as tt2;
when logo =21 then
-- 进港平均滑入时间（分钟）12月和公示的一样
select round(avg(timestampdiff(minute, ATA, Actual_arrival)),1) as 进港平均滑入时间保留一位小数, avg(timestampdiff(minute, ATA, Actual_arrival)) as 进港平均滑入时间分钟 from hangban_pek where Actual_arrival is not null and ATA is not null and timestampdiff(minute, ATA, Actual_arrival) between 0 and 150 and in_out_sign='进港' and date between start_time and end_time;
when logo =22 then
-- 出港平均滑出时间（分钟）12月和公示的一样
select round(avg(timestampdiff(minute, Actual_depart, Actual_take_off)),1) as 出港平均滑出时间保留一位小数, avg(timestampdiff(minute, Actual_depart, Actual_take_off)) as 出港平均滑出时间分钟 from hangban_pek where in_out_sign='出港' and Cancel_Status = '正常' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off) between 0 and 150 and date between start_time and end_time;
else BEGIN END; end case;

case when logo =0 or logo =50 then
-- 空管考核指标，合成一个表
select tt1.空管TSAT时间放行正常率,  tt2.空管考核TSAT计划离港符合率 from (select concat(round(ifnull(t1.p1/t2.p2,0)*100, 2),'%') as 空管TSAT时间放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（空管TSAT时间放行正常航班）, t2.p2 as 分母（空管TSAT时间正常准备航班） from(select count(*) as p1 from hangban_pek where timestampdiff(minute, RDY_time, Last_TSAT)>=0 and timestampdiff(minute, Last_TSAT, ASAT)<=5 and in_out_sign='出港' and Cancel_Status = '正常' and date between start_time and end_time) as t1 , (select count(*) as p2 from hangban_pek where ( timestampdiff(minute, RDY_time, Last_TSAT)>=0 or Last_TSAT is null ) and in_out_sign='出港' and Cancel_Status = '正常' and date between start_time and end_time) as t2) as tt1 inner join (select concat(round(ifnull(t1.p1/t2.p2*100,0), 2),'%') as 空管考核TSAT计划离港符合率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（TSAT符合计划离港时间航班）, t2.p2 as 分母（全部出港航班数） from(select count(*) as P1 from hangban_pek where (timestampdiff(minute, Planned_depart, First_TSAT)<=5 or timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, First_TSAT)-Min_crossing_Station <=5 ) and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常') as t2) as tt2;
when logo =51 then
-- 空管考核TSAT时间放行正常率（末次ready时间）
select concat(round(ifnull(t1.p1/t2.p2,0)*100, 2),'%') as 空管TSAT时间放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（空管TSAT时间放行正常航班）, t2.p2 as 分母（空管TSAT时间正常准备航班） from(select count(*) as p1 from hangban_pek where timestampdiff(minute, RDY_time, Last_TSAT)>=0 and timestampdiff(minute, Last_TSAT, ASAT)<=5 and in_out_sign='出港' and Cancel_Status = '正常' and date between start_time and end_time) as t1 , (select count(*) as p2 from hangban_pek where ( timestampdiff(minute, RDY_time, Last_TSAT)>=0 or Last_TSAT is null ) and in_out_sign='出港' and Cancel_Status = '正常' and date between start_time and end_time) as t2;
when logo =52 then
-- 空管考核TSAT计划离港符合率
select concat(round(ifnull(t1.p1/t2.p2*100,0), 2),'%') as 空管考核TSAT计划离港符合率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（TSAT符合计划离港时间航班）, t2.p2 as 分母（全部出港航班数） from(select count(*) as P1 from hangban_pek where (timestampdiff(minute, Planned_depart, First_TSAT)<=5 or timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, First_TSAT)-Min_crossing_Station <=5 ) and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where in_out_sign = '出港' and date >= start_time and date <= end_time and Cancel_Status = '正常') as t2;
else BEGIN END; end case;

case when logo =0 or logo =70 then
-- 进港航班摆渡车和客梯车到位率,包含数据缺失，合成的大表
select tt1.ag as 代理公司, tt1.进港摆渡车到位率, tt1.完整性,   tt2.进港航班客梯车到位率, tt2.完整性 from (select t1.agent as ag,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整率原始数据, t1.p1 as 到位率分子进港摆渡车到位数, t2.p2 as 到位率分母需要摆渡车服务的进港航总班次, t3.p3 as 完整率分子数据   from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_First_arrival, Actual_arrival)>=5 or (Incoming_First_arrival is not null and Actual_arrival is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between start_time and end_time group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡'  and in_out_sign='进港' and date between start_time and end_time group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_First_arrival is not null and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between start_time and end_time group by agent) as t3 on t3.agent=t2.agent) as tt1 left join (select t1.agent as ag,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港航班客梯车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性 , t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子进港客梯车到位数,  t2.p2 分母需要客梯车服务的进港航总班次, t3.p3 完整率分子数据完整航班数 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_elevator_inplace, Actual_arrival)>=5 or (Incoming_elevator_inplace is not null and Actual_arrival is null)) and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between start_time and end_time group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between start_time and end_time group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_elevator_inplace is not null and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between start_time and end_time group by agent) as t3 on t3.agent=t2.agent) as tt2 on tt1.ag=tt2.ag order by tt1.ag;
when logo =71 then
-- 进港航班摆渡车到位率,包含数据缺失
select t1.agent as 代理公司,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整率原始数据, t1.p1 as 到位率分子进港摆渡车到位数, t2.p2 as 到位率分母需要摆渡车服务的进港航总班次, t3.p3 as 完整率分子数据   from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_First_arrival, Actual_arrival)>=5 or (Incoming_First_arrival is not null and Actual_arrival is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between start_time and end_time group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡'  and in_out_sign='进港' and date between start_time and end_time group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_First_arrival is not null and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between start_time and end_time group by agent) as t3 on t3.agent=t2.agent;
when logo =72 then
-- 进港航班客梯车到位率,包含数据缺失
select t1.agent as 代理公司,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港航班客梯车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性 , t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子进港客梯车到位数,  t2.p2 分母需要客梯车服务的进港航总班次, t3.p3 完整率分子数据完整航班数 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_elevator_inplace, Actual_arrival)>=5 or (Incoming_elevator_inplace is not null and Actual_arrival is null)) and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between start_time and end_time group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between start_time and end_time group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_elevator_inplace is not null and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between start_time and end_time group by agent) as t3 on t3.agent=t2.agent;
else BEGIN END; end case;

case when logo =0 or logo =80 then
-- 出港航班地面保障车辆达标情况,包含数据缺失,大表
select tt1.ag as 代理公司, tt1.出港首辆摆渡车到位率, tt1.完整性,tt2.出港末辆摆渡车到位率,tt2.完整性,tt3.出港航班摆渡车整体到位率,tt3.完整性,tt4.出港航班牵引车到位率,tt4.完整性 from (select t1.agent as ag, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港首辆摆渡车到位率 , concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent) as tt1 left join (select t1.agent as ag,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港末辆摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 or (Final_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent)as tt2 on tt1.ag=tt2.ag left join (select t1.agent as ag, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班摆渡车整体到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 and timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (Final_ferry_gate is not null and Boarding_start is null) or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join(select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent)as tt3 on tt1.ag=tt3.ag left join (select t1.agent as ag, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班牵引车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Trailer_in_place, Last_TSAT)>=5 or (Trailer_in_place is not null and Last_TSAT is null)) and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Trailer_in_place is not null and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent)as tt4 on tt1.ag=tt4.ag order by tt1.ag;
when logo =81 then
-- 出港首辆摆渡车到位率,包含数据缺失
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港首辆摆渡车到位率 , concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
when logo =82 then
-- 出港末辆摆渡车到位率,包含数据缺失
select t1.agent as 代理公司,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港末辆摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 or (Final_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
when logo =83 then
-- 出港航班摆渡车整体到位率,包含数据缺失
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班摆渡车整体到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 and timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (Final_ferry_gate is not null and Boarding_start is null) or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join(select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
when logo =84 then
-- 出港航班牵引车到位率,包含数据缺失
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班牵引车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Trailer_in_place, Last_TSAT)>=5 or (Trailer_in_place is not null and Last_TSAT is null)) and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Trailer_in_place is not null and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
else BEGIN END;end case;


case when logo =0 or logo =90 then
-- 国内各公司的出港关舱门正常率，联合了公司全称，数据缺失，就是表格中的数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) as 全部出港航班数,  ifnull(t1.p1,0) as 关舱门正常的航班数, ifnull(que,0) as 缺失数据, concat(round(ifnull(t1.p1/t2.p2 * 100,0),2),'%') as 出港关舱门正常率 from (select company, count(*) as p1 from hangban_pek where  (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as que from hangban_pek where Closing_cabin_door is null and Closing_cargo_door is null AND in_out_sign = '出港' AND date between start_time and end_time AND Cancel_Status = '正常' GROUP BY company) AS t3 ON t2.company=t3.company where ai.country= '国内' ORDER BY t1.p1/t2.p2 DESC;
else BEGIN END; end case;

case when logo =0 or logo =100 then
-- 国内航空公司客运出港关舱门正常率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港关舱门正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子正常航班,t2.p2 as 分母全部航班 from(select  count(*) as p1 from hangban_pek LEFT JOIN airline_info AS ai ON ai.IATA = company where ai.country='国内' and ai.airline_style='客货' and (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常') as t1 , (select count(*) as p2 from hangban_pek LEFT JOIN airline_info AS ai ON ai.IATA = company where ai.country='国内' and ai.airline_style='客货' and  in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常') as t2 ;
else BEGIN END; end case;



case when logo =0 or logo =110 then
-- 月度国内航空公司航班正常性综合考核,200架次以上
select ttt1.chi as 公司简称, ttt1.res1 as 机上延误比例分值, ttt1.res1*30 as 机上延误比例加权后, ttt2.res2 长时间延误比例分值, ttt2.res2*30 长时间延误比例加权后, ifnull(ttt3.res3, avg1.a1) as 早出港始发起飞正常率分值, ifnull(ttt3.res3, avg1.a1)*40 as 早出港始发起飞正常率加权后 ,ifnull(ttt4.res4,avg2.a2) as 过站放行正常率分值 ,ifnull(ttt4.res4,avg2.a2)*55 as 过站放行正常率加权后, (-ttt1.res1*30-ttt2.res2*30+ifnull(ttt3.res3, avg1.a1)*40 +ifnull(ttt4.res4,avg2.a2)*55 + 3.5) as total from
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法,>=200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res1 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 >=200 group by com) as ttt1 left join
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法,>=200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res2 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 >=200 group by com ) as ttt2  on ttt1.com=ttt2.com  left join
-- 国内公司早出港始发航班起飞正常率,200架次以上  分母不包含取消的所有航班   >45%要乘以1.1  ，已经计算上超远机位占比加成
(select ai.chi_simple as 公司简称, t1.company as com, round(t1.p1/t2.p2 * if(t4.p4/t2.p2>0.45,1.1,1),2) as res3, t1.p1/t2.p2,concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 原始早出港始发航班正常率 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company left join (select company, count(*) as p4 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t4 on t4.company=t2.company where ai.country='国内' and t3.p3 >= 200 order by t1.p1/t2.p2) as ttt3 on ttt1.com=ttt3.com left join
-- 国内公司过站航班放行正常率,200架次以上
(select ai.chi_simple as 公司简称, t2.company as com, round(t1.p1/t2.p2,2) as res4 , concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200) as ttt4 on ttt1.com=ttt4.com ,
-- 国内公司早出港始发航班起飞正常率,200架次以上 ，分母不包含取消的所有航班,平均正常率
(select round(avg(t1.p1/t2.p2),2) as a1 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200 order by t1.p1/t2.p2) as avg1,
-- 国内公司过站航班放行正常率,200架次以上 平均正常率
(select round(avg(t1.p1/t2.p2),2) as a2 from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200) as avg2 order by total desc;
else BEGIN END; end case;

case when logo =0 or logo =115 then
-- 月度国内航空公司航班正常性综合考核,8-200架次
select ttt1.chi as 公司简称, ttt1.res1 as 机上延误比例分值, ttt1.res1*30 as 机上延误比例加权后, ttt2.res2 长时间延误比例分值, ttt2.res2*30 长时间延误比例加权后, ifnull(ttt3.res3, avg1.a1) as 早出港始发起飞正常率分值, ifnull(ttt3.res3, avg1.a1)*40 as 早出港始发起飞正常率加权后 ,ifnull(ttt4.res4,avg2.a2) as 过站放行正常率分值 ,ifnull(ttt4.res4,avg2.a2)*55 as 过站放行正常率加权后, (-ttt1.res1*30-ttt2.res2*30+ifnull(ttt3.res3, avg1.a1)*40 +ifnull(ttt4.res4,avg2.a2)*55 + 3.5) as total from
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法,8-200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res1 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 between 8 and 199 group by com) as ttt1 left join
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法,8-200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res2 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 between 8 and 199 group by com ) as ttt2 on ttt1.com=ttt2.com left join
-- 国内公司早出港始发航班起飞正常率 ,8-200架次 分母不包含取消的所有航班，>45%要乘以1.1  ，已经计算上超远机位占比加成
(select ai.chi_simple as 公司简称, t1.company as com, round(t1.p1/t2.p2 * if(t4.p4/t2.p2>0.45,1.1,1),2) as res3, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 原始早出港始发航班正常率 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company left join (select company, count(*) as p4 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t4 on t4.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199 order by t1.p1/t2.p2) as ttt3 on ttt1.com=ttt3.com left join
-- 国内公司过站航班放行正常率,8-200架次 ,
(select ai.chi_simple as 公司简称, t2.company as com, round(t1.p1/t2.p2 ,2) as res4, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率 from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199) as ttt4 on ttt1.com=ttt4.com ,
-- 国内公司早出港始发航班起飞正常率 ,8-200架次,分母不包含取消的所有航班，平均正常率
(select round(avg(t1.p1/t2.p2),2) as a1 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199) as avg1,
-- 国内公司过站航班放行正常率,8-200架次 平均正常率
(select round(avg(t1.p1/t2.p2),2) as a2  from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199) as avg2 order by total desc;
else BEGIN END; end case;

case when logo =0 or logo =120 then
-- 国内, 航班起飞正常率按航班号,包含公司简称，起飞6小时内取消的，表格中数据，且正常率小于50%的
select t2.flight_nb as 航班号, ifnull(t2.p2,0) 计划出港航班总班次,  ifnull(t1.p1,0) 起飞正常航班, ifnull(can,0) as 取消架次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率,  ai.chi_simple from (select flight_nb, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by flight_nb) as t1 right join (select company, flight_nb, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by flight_nb) as t2 on t1.flight_nb=t2.flight_nb left join (select flight_nb, count(*) as can from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '取消' and Take_off_Delay != '6h前取消' group by flight_nb) as t3 on t3.flight_nb=t2.flight_nb left join airline_info as ai on t2.company=ai.IATA  where ai.country='国内' and t2.p2>8 and t1.p1/t2.p2<0.5 order by t1.p1/t2.p2 asc limit 5;
when logo =121 then
-- 国内, 航班起飞正常率按航班号,包含公司简称，机场中文名字，起飞6小时内取消的
select ai.chi_simple as 公司简称,  t2.company, t2.terminal, ap.airport_chi, t2.flight_nb, ifnull(t2.p2,0) 计划出港航班总班次, ifnull(t1.p1,0) 起飞正常航班, ifnull(can,0) as 取消架次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率 from (select flight_nb, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by flight_nb) as t1 right join (select company, terminal, flight_nb, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by flight_nb) as t2 on t1.flight_nb=t2.flight_nb left join (select flight_nb, count(*) as can from hangban_pek where in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '取消' and Take_off_Delay != '6h前取消' group by flight_nb) as t3 on t3.flight_nb=t2.flight_nb left join airline_info as ai on t2.company=ai.IATA  left join airport_info as ap on t2.terminal=ap.IATA where ai.country='国内' and t2.p2>8 order by t1.p1/t2.p2 asc limit 15;
else BEGIN END; end case;

case when logo =0 or logo =130 then
-- 外国, 航班起飞正常率按公司, 过站航班放行全部航班>=60，表格中数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率 , ifnull(t1.p1/t2.p2,0) as 原始数据, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where ai.country !='国内' and t2.p2 >=60 order by t1.p1/t2.p2 desc ;
else BEGIN END; end case;

case when logo =0 or logo =140 then
-- 外国, 航班起飞正常率按公司，过站航班放行全部航班在8-60之间，表格中数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率, ifnull(t1.p1/t2.p2,0) as 原始数据, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where ai.country !='国内' and t2.p2 between 8 and 59 order by t1.p1/t2.p2 desc ;
else BEGIN END; end case;

case when logo =0 or logo =150 then
-- 提前6小时（含）以上取消航班情况, 国内
select ai.chi_simple as 公司简称,  count(*) as 航班数, company as 公司二字码 from hangban_pek left join airline_info as ai on company=ai.IATA where ai.country='国内' and in_out_sign='出港' and date between start_time and end_time and Take_off_Delay = '6h前取消' group by company order by count(*) desc;
else BEGIN END; end case;

case when logo =0 or logo =160 then
-- 提前6小时（含）以上取消航班情况, 国际
select ai.chi_simple as 公司简称, count(*) as 航班数, company as 公司二字码 from hangban_pek left join airline_info as ai on company=ai.IATA where ai.country!='国内' and in_out_sign='出港' and date between start_time and end_time and Take_off_Delay = '6h前取消' group by company order by count(*) desc;
else BEGIN END; end case;

case when logo =0 or logo =170 then
-- 国内和外国, 航班起飞正常率按公司，过站航班放行全部航班在8以下，表格中数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率, ifnull(t1.p1/t2.p2,0) as 原始数据, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between start_time and end_time and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between start_time and end_time and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where t2.p2 < 8 order by t1.p1/t2.p2 desc ;
else BEGIN END; end case;


END$$
DELIMITER ;


call p2(20200201,20200229,0);
