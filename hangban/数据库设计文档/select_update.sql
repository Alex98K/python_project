-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
-- 数据表的表头
select '序号', '运行日', '代理', '公司', '航班号', '机号', '机型', '机型类别', '航站', '国内国际', '计划到港时间', '计划离港时间', '实际到港', '实际离港时间', '首次TSAT', 'TSAT', '首次RDY', 'RDY时间', 'ASAT', '实际起飞时间', '前班实际落地', '计划过站时间', '机位', '机坪', '近远机位', '任务性质', '跑道', '取消状态', '登机开始时间', '登机结束时间', '开客舱门时间', '开货航门时间', '关客舱门时间', '关货舱门时间', '进港刹车时间', '出港松刹车时间', '靠桥（客梯车）', '撤桥（客梯车）', '首摆渡到登机口', '末摆渡到登机口', '拖车到位', '进港客梯车达标', '起飞延误', '内外航', '早出港始发标识', '最小过站时间', 'STA', 'ATA', '需用摆渡', '进港客梯车到位', '进港首摆渡到达机位', '进港首摆渡车达标', '旅客人数', '进离港标识', 'ETA', '过站放行延误', '早出港延误';
-- 输出文件带表头
select * into outfile 'd:\\not_fuhe.csv' CHARACTER SET GBK FIELDS TERMINATED BY ', ' from (select '序号', '运行日', '代理', '公司', '航班号', '机号', '机型', '机型类别', '航站', '国内国际', '计划到港时间', '计划离港时间', '实际到港', '实际离港时间', '首次TSAT', 'TSAT', '首次RDY', 'RDY时间', 'ASAT', '实际起飞时间', '前班实际落地', '计划过站时间', '机位', '机坪', '近远机位', '任务性质', '跑道', '取消状态', '登机开始时间', '登机结束时间', '开客舱门时间', '开货航门时间', '关客舱门时间', '关货舱门时间', '进港刹车时间', '出港松刹车时间', '靠桥（客梯车）', '撤桥（客梯车）', '首摆渡到登机口', '末摆渡到登机口', '拖车到位', '进港客梯车达标', '起飞延误', '内外航', '早出港始发标识', '最小过站时间', 'STA', 'ATA', '需用摆渡', '进港客梯车到位', '进港首摆渡到达机位', '进港首摆渡车达标', '旅客人数', '进离港标识', 'ETA', '过站放行延误', '早出港延误' union

select * from hangban_pek where (timestampdiff(minute, Planned_depart, First_TSAT)<=5 or timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, First_TSAT)-Min_crossing_Station <=5 )and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常'



)b;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 进港平均滑入时间（分钟）12月和公示的一样
select round(avg(timestampdiff(minute, ATA, Actual_arrival)),1) as 进港平均滑入时间保留一位小数, avg(timestampdiff(minute, ATA, Actual_arrival)) as 进港平均滑入时间分钟 from hangban_pek where Actual_arrival is not null and ATA is not null and timestampdiff(minute, ATA, Actual_arrival) between 0 and 150 and in_out_sign='进港' and date between 20200401 and 20200430;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 出港平均滑出时间（分钟）12月和公示的一样
select round(avg(timestampdiff(minute, Actual_depart, Actual_take_off)),1) as 出港平均滑出时间保留一位小数, avg(timestampdiff(minute, Actual_depart, Actual_take_off)) as 出港平均滑出时间分钟 from hangban_pek where in_out_sign='出港' and Cancel_Status = '正常' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off) between 0 and 150 and date between 20200401 and 20200430;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 平均滑行时间（分钟）
select tt1.进港平均滑入时间保留一位小数, tt2.出港平均滑出时间保留一位小数 from (select round(avg(timestampdiff(minute, ATA, Actual_arrival)),1) as 进港平均滑入时间保留一位小数, avg(timestampdiff(minute, ATA, Actual_arrival)) as 进港平均滑入时间分钟 from hangban_pek where Actual_arrival is not null and ATA is not null and timestampdiff(minute, ATA, Actual_arrival) between 0 and 150 and in_out_sign='进港' and date between 20200401 and 20200430) as tt1 inner join (select round(avg(timestampdiff(minute, Actual_depart, Actual_take_off)),1) as 出港平均滑出时间保留一位小数, avg(timestampdiff(minute, Actual_depart, Actual_take_off)) as 出港平均滑出时间分钟 from hangban_pek where in_out_sign='出港' and Cancel_Status = '正常' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off) between 0 and 150 and date between 20200401 and 20200430) as tt2;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 空管考核全部正常航班和放行正常航班（末次ready时间）
-- 空管考核空管TSAT时间放行正常航班（末次ready时间）-- -分子
select count(*) as 空管TSAT时间放行正常航班 from hangban_pek where timestampdiff(minute, RDY_time, Last_TSAT)>=0 and timestampdiff(minute, Last_TSAT, ASAT)<=5 and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430;
-- 空管考核TSAT时间正常准备航班数（末次ready时间）-- -分母
select count(*) as 空管TSAT时间正常准备航班 from hangban_pek where (timestampdiff(minute, RDY_time, Last_TSAT)>=0 or Last_TSAT is null) and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430;
-- 空管考核TSAT时间放行正常率（末次ready时间）
select concat(round(ifnull(t1.p1/t2.p2,0)*100, 2),'%') as 空管TSAT时间放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（空管TSAT时间放行正常航班）, t2.p2 as 分母（空管TSAT时间正常准备航班） from(select count(*) as p1 from hangban_pek where timestampdiff(minute, RDY_time, Last_TSAT)>=0 and timestampdiff(minute, Last_TSAT, ASAT)<=5 and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430) as t1 , (select count(*) as p2 from hangban_pek where ( timestampdiff(minute, RDY_time, Last_TSAT)>=0 or Last_TSAT is null ) and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430) as t2;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 空管考核TSAT计划离港符合率
-- TSAT符合计划离港时间航班
select count(*) as TSAT符合计划离港时间航班 from hangban_pek where (timestampdiff(minute, Planned_depart, First_TSAT)<=5 or timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, First_TSAT)-Min_crossing_Station <=5 )and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常';
-- 空管考核全部出港航班数
select count(*) as 全部出港航班数 from hangban_pek where in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430 ;
-- 空管考核TSAT计划离港符合率
select concat(round(ifnull(t1.p1/t2.p2*100,0), 2),'%') as 空管考核TSAT计划离港符合率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（TSAT符合计划离港时间航班）, t2.p2 as 分母（全部出港航班数） from(select count(*) as P1 from hangban_pek where (timestampdiff(minute, Planned_depart, First_TSAT)<=5 or timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, First_TSAT)-Min_crossing_Station <=5 ) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t2;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 空管考核指标，合成一个表
select tt1.空管TSAT时间放行正常率,  tt2.空管考核TSAT计划离港符合率 from (select concat(round(ifnull(t1.p1/t2.p2,0)*100, 2),'%') as 空管TSAT时间放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（空管TSAT时间放行正常航班）, t2.p2 as 分母（空管TSAT时间正常准备航班） from(select count(*) as p1 from hangban_pek where timestampdiff(minute, RDY_time, Last_TSAT)>=0 and timestampdiff(minute, Last_TSAT, ASAT)<=5 and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430) as t1 , (select count(*) as p2 from hangban_pek where ( timestampdiff(minute, RDY_time, Last_TSAT)>=0 or Last_TSAT is null ) and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430) as t2) as tt1 inner join (select concat(round(ifnull(t1.p1/t2.p2*100,0), 2),'%') as 空管考核TSAT计划离港符合率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子（TSAT符合计划离港时间航班）, t2.p2 as 分母（全部出港航班数） from(select count(*) as P1 from hangban_pek where (timestampdiff(minute, Planned_depart, First_TSAT)<=5 or timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, First_TSAT)-Min_crossing_Station <=5 ) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t2) as tt2;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 进港摆渡车到位
select count(*) as 进港摆渡车到位, agent from hangban_pek where (timestampdiff(minute, Incoming_First_arrival, Actual_arrival)>=5 or (Incoming_First_arrival is not null and Actual_arrival is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent;
-- 需要摆渡车服务的进港航总班次
select count(*) as 需要摆渡车服务的进港航总班次, agent from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent;
-- 进港航班摆渡车到位率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港摆渡车到位率, t1.agent from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_First_arrival, Actual_arrival)>=5 or (Incoming_First_arrival is not null and Actual_arrival is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡'  and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent;
-- 进港航班摆渡车到位数据完整率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港摆渡车到位数据完整率, t1.agent from (select agent, count(*) as p1 from hangban_pek where Incoming_First_arrival is not null and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent;
-- 进港航班摆渡车到位率,包含数据缺失
select t1.agent,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整率原始数据, t1.p1 as 到位率分子进港摆渡车到位数, t2.p2 as 到位率分母需要摆渡车服务的进港航总班次, t3.p3 as 完整率分子数据   from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_First_arrival, Actual_arrival)>=5 or (Incoming_First_arrival is not null and Actual_arrival is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡'  and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_First_arrival is not null and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t3 on t3.agent=t2.agent;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 进港航班客梯车到位
select count(*) as 进港航班客梯车到位, agent from hangban_pek where (timestampdiff(minute, Incoming_elevator_inplace, Actual_arrival)>=5 or (Incoming_elevator_inplace is not null and Actual_arrival is null)) and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent;
-- 需要客梯车服务的进港航总班次
select count(*) as 需要客梯车服务的进港航总班次, agent from hangban_pek where Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent;
-- 进港航班客梯车到位率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港航班客梯车到位率, t1.agent from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_elevator_inplace, Actual_arrival)>=5 or (Incoming_elevator_inplace is not null and Actual_arrival is null)) and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Incoming_elevator_logo != '无需客梯' and  in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent;
-- 进港航班客梯车到位数据完整率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港航班客梯车到位数据完整率, t1.agent from (select agent, count(*) as p1 from hangban_pek where Incoming_elevator_inplace is not null and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent;
-- 进港航班客梯车到位率,包含数据缺失
select t1.agent,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港航班客梯车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性 , t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子进港客梯车到位数,  t2.p2 分母需要客梯车服务的进港航总班次, t3.p3 完整率分子数据完整航班数 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_elevator_inplace, Actual_arrival)>=5 or (Incoming_elevator_inplace is not null and Actual_arrival is null)) and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_elevator_inplace is not null and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t3 on t3.agent=t2.agent;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 进港航班摆渡车和客梯车到位率,包含数据缺失，合成的大表
select tt1.ag as 代理公司, tt1.进港摆渡车到位率, tt1.完整性,   tt2.进港航班客梯车到位率, tt2.完整性 from (select t1.agent as ag,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整率原始数据, t1.p1 as 到位率分子进港摆渡车到位数, t2.p2 as 到位率分母需要摆渡车服务的进港航总班次, t3.p3 as 完整率分子数据   from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_First_arrival, Actual_arrival)>=5 or (Incoming_First_arrival is not null and Actual_arrival is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡'  and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_First_arrival is not null and Need_use_Ferry = '需摆渡' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t3 on t3.agent=t2.agent) as tt1 left join (select t1.agent as ag,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 进港航班客梯车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性 , t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子进港客梯车到位数,  t2.p2 分母需要客梯车服务的进港航总班次, t3.p3 完整率分子数据完整航班数 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Incoming_elevator_inplace, Actual_arrival)>=5 or (Incoming_elevator_inplace is not null and Actual_arrival is null)) and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Incoming_elevator_inplace is not null and Incoming_elevator_logo != '无需客梯' and in_out_sign='进港' and date between 20200401 and 20200430 group by agent) as t3 on t3.agent=t2.agent) as tt2 on tt1.ag=tt2.ag;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 出港航班摆渡车到位
-- 出港需用摆渡全部航班数
select count(*), agent from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent;
-- 出港首辆摆渡车到位率数据缺失航班数
select count(*) as 出港需摆渡数据缺失航班 , agent from hangban_pek where First_ferry_gate is null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent;
-- 出港首辆摆渡车到位率
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港首辆摆渡车到位率 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港首辆摆渡车到位率数据完整率
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港首辆摆渡车到位率数据完整率 from (select agent, count(*) as p1 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港首辆摆渡车到位率,包含数据缺失
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港首辆摆渡车到位率 , concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
-- 出港末辆摆渡车到位率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港末辆摆渡车到位率, t1.agent from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 or (Final_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港末辆摆渡车到位率数据完整率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港末辆摆渡车到位率数据完整率, t1.agent from (select agent, count(*) as p1 from hangban_pek where Final_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港末辆摆渡车到位率,包含数据缺失
select t1.agent as 代理公司,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港末辆摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 or (Final_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
-- 出港航班摆渡车整体到位率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班摆渡车整体到位率, t1.agent from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 and timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (Final_ferry_gate is not null and Boarding_start is null) or (First_ferry_gate is not null and Boarding_start is null))and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港航班摆渡车到位数据完整率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港离港航班摆渡车到位数据完整率, t1.agent from (select agent, count(*) as p1 from hangban_pek where Final_ferry_gate is not null and First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港航班摆渡车整体到位率,包含数据缺失
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班摆渡车整体到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 and timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (Final_ferry_gate is not null and Boarding_start is null) or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join(select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
-- 出港航班牵引车到位率
-- 出港牵引车正常到位航班班次
select count(*) as 牵引车正常到位航班班次, agent from hangban_pek where (timestampdiff(minute, Trailer_in_place, Last_TSAT)>=5 or (Trailer_in_place is not null and Last_TSAT is null)) and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent;
-- 出港需用牵引车全部航班数
select count(*) as 出港需用牵引车全部航班数, agent from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent;
-- 出港航班牵引车到位率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班牵引车到位率, t1.agent from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Trailer_in_place, Last_TSAT)>=5 or (Trailer_in_place is not null and Last_TSAT is null)) and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港航班牵引车到位数据完整率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班牵引车到位率, t1.agent from (select agent, count(*) as p1 from hangban_pek where Trailer_in_place is not null and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent;
-- 出港航班牵引车到位率,包含数据缺失
select t1.agent as 代理公司, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班牵引车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Trailer_in_place, Last_TSAT)>=5 or (Trailer_in_place is not null and Last_TSAT is null)) and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Trailer_in_place is not null and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -

-- 出港航班地面保障车辆达标情况,包含数据缺失
select tt1.ag as 代理公司, tt1.出港首辆摆渡车到位率, tt1.完整性,tt2.出港末辆摆渡车到位率,tt2.完整性,tt3.出港航班摆渡车整体到位率,tt3.完整性,tt4.出港航班牵引车到位率,tt4.完整性 from (select t1.agent as ag, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港首辆摆渡车到位率 , concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent) as tt1 left join (select t1.agent as ag,  concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港末辆摆渡车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 or (Final_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent)as tt2 on tt1.ag=tt2.ag left join (select t1.agent as ag, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班摆渡车整体到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据  from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Boarding_start, Final_ferry_gate)<=25 and timestampdiff(minute, First_ferry_gate, Boarding_start)>=5 or (Final_ferry_gate is not null and Boarding_start is null) or (First_ferry_gate is not null and Boarding_start is null)) and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join(select agent, count(*) as p3 from hangban_pek where First_ferry_gate is not null and Need_use_Ferry = '需摆渡' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent)as tt3 on tt1.ag=tt3.ag left join (select t1.agent as ag, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班牵引车到位率, concat(round(ifnull(t3.p3/t2.p2* 100,0),2),'%') 完整性, t1.p1/t2.p2 as 到位率原始数据, t3.p3/t2.p2 as 完整性原始数据, t1.p1 as 到位率分子数据, t2.p2 分母 ,t3.p3 as 完整率分子数据 from (select agent, count(*) as p1 from hangban_pek where (timestampdiff(minute, Trailer_in_place, Last_TSAT)>=5 or (Trailer_in_place is not null and Last_TSAT is null)) and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t1 right join (select agent, count(*) as p2 from hangban_pek where Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t2 on t1.agent= t2.agent left join (select agent, count(*) as p3 from hangban_pek where Trailer_in_place is not null and Seat not in ('W103', 'W104', 'W105', 'W106', 'W107') and Seat not like '95%' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by agent) as t3 on t3.agent=t2.agent)as tt4 on tt1.ag=tt4.ag;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 关舱门正常率
-- 全部出港航班数
select count(*) as 全部出港航班数 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' ;
-- 各公司的全部出港航班数
select company, count(*) as 全部出港航班数 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company;
-- 各公司的全部出港航班数，由公司全称的
select ai.airline_chi, company, count(*) as 全部出港航班数 from hangban_pek left join airline_info as ai on ai.IATA = company where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company;
-- 关舱门正常的航班数
select count(*) as 关舱门正常的航班数 from hangban_pek where ((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9')))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常';
-- company公司的关舱门不正常的航班
select * from hangban_pek where not ((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9')))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' and company='CA';
-- 各公司的关舱门正常的航班数
select company, count(*) as 关舱门正常的航班数 from hangban_pek where (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company order by company;
-- 各公司的关舱门正常的航班数，有公司全称的
select ai.airline_chi, company, count(*) as 关舱门正常的航班数 from hangban_pek left join airline_info as ai on ai.IATA=company where (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company order by company;

-- company公司的关舱门数据缺失的，判断条件结果是空的，判为数据缺失
select * from hangban_pek where (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) is null and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' and company='CA';
-- 舱门数据为空的，判为缺失数据
select * from hangban_pek where Closing_cabin_door is null and Closing_cargo_door is null and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' and company='CA';
-- 国内航空公司客运出港关舱门正常率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港关舱门正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子正常航班,t2.p2 as 分母全部航班 from(select  count(*) as p1 from hangban_pek LEFT JOIN airline_info AS ai ON ai.IATA = company where ai.country='国内' and ai.airline_style='客货' and (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t1 , (select count(*) as p2 from hangban_pek LEFT JOIN airline_info AS ai ON ai.IATA = company where ai.country='国内' and ai.airline_style='客货' and  in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t2 ;
-- 全部各公司的出港关舱门正常率
select t2.company, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港关舱门正常率 from(select company, count(*) as p1 from hangban_pek where  (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company order by t1.p1/t2.p2 desc;
-- 国内和国际各公司的出港关舱门正常率，联合了公司全称
select ai.airline_chi as 公司全称, t2.company as 公司二字码, ifnull(t1.p1,0) as 关舱门正常的航班数, ifnull(t2.p2,0) as 全部出港航班数, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港关舱门正常率 from (select company, count(*) as p1 from hangban_pek where  (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company LEFT JOIN airline_info AS ai ON ai.IATA = t2.company ORDER BY t1.p1/t2.p2 DESC;
-- 国内各公司的出港关舱门正常率，联合了公司全称
select ai.airline_chi as 公司全称, t2.company as 公司二字码, ifnull(t1.p1,0) as 关舱门正常的航班数, ifnull(t2.p2,0) as 全部出港航班数, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港关舱门正常率 from (select company , count(*) as p1 from hangban_pek where  (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company LEFT JOIN airline_info AS ai ON ai.IATA = t2.company where ai.country= '国内' ORDER BY t1.p1/t2.p2 DESC;
-- 数据缺失
select ai.airline_chi as 公司全称, company, count(*) as p1 from hangban_pek left join airline_info as ai on ai.IATA = company where  Closing_cabin_door is null and Closing_cargo_door is null AND in_out_sign = '出港' AND date between 20200401 and 20200430 AND Cancel_Status = '正常' AND ai.country= '国内' GROUP BY company;
-- 国内各公司的出港关舱门正常率，联合了公司全称，数据缺失，就是表格中的数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) as 全部出港航班数,  ifnull(t1.p1,0) as 关舱门正常的航班数, ifnull(que,0) as 缺失数据, concat(round(ifnull(t1.p1/t2.p2 * 100,0),2),'%') as 出港关舱门正常率 from (select company, count(*) as p1 from hangban_pek where  (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Planned_depart)>=0 or (timestampdiff(minute, Planned_depart, greatest(Closing_cabin_door, Closing_cargo_door))<=5 and (Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9'))) or (timestampdiff(minute, Planned_depart, First_TSAT)>=5 and timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), First_TSAT)>=0)) and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as que from hangban_pek where Closing_cabin_door is null and Closing_cargo_door is null AND in_out_sign = '出港' AND date between 20200401 and 20200430 AND Cancel_Status = '正常' GROUP BY company) AS t3 ON t2.company=t3.company where ai.country= '国内' ORDER BY t1.p1/t2.p2 DESC;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 出港航班机上延误时间,分公司、分延误时间,空值不纳入延误时长分子统计，也就是不考虑空值问题, 首都机场计算方法
select t1.company, ai.chi_simple, f1 as 出港航班机上延误时间, ifnull(p1,0), concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班机上延误比例 from (select company, count(*) as p1, timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30 as f1 from hangban_pek where (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, f1 order by f1) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on t2.company=ai.IATA where ai.country='国内';
-- 出港航班机上延误时间,分公司、分延误时间,空值算入统计，单独列出来, 按规则的计算方法
select t1.company, ai.chi_simple, f1 as 出港航班机上延误时间, ifnull(p1,0) as 航班数, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班机上延误比例 from (select company, count(*) as p1, timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30 as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, f1 order by f1) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on t2.company=ai.IATA where ai.country='国内';
-- case when f1<=30 then t1.p1 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1 when f1>=120 and f1<180 then t1.p1 when f1>=180 then t1.p1 end
-- case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 end
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组,空值不纳入延误时长分子统计，也就是不考虑空值问题, 首都机场计算方法
select t1.company, ai.chi_simple, f1 ,case when f1<=30 then t1.p1 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1 when f1>=120 and f1<180 then t1.p1 when f1>=180 then t1.p1 end from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内';
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，空值算入统计，单独列出来, 按规则的计算方法
select t1.company, ai.chi_simple, f1 ,case when f1<=30 then t1.p1 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1 when f1>=120 and f1<180 then t1.p1 when f1>=180 then t1.p1 else t1.p1 end from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内';
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值不纳入延误时长分子统计，也就是不考虑空值问题, 首都机场计算方法
select tt1.com, tt1.chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company group by com ;
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法
select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company group by com ;
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法,8-200架次
select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 between 8 and 199 group by com;
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法,>=200架次
select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 >=200 group by com;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 长时间延误航班比例,空值不纳入延误时长分子统计，也就是不考虑空值问题, 首都机场计算方法
select t1.company, ai.chi_simple, f1 as 出港航班长时间延误时间, p1 as 航班数, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班长时间延误比例 from (select company, count(*) as p1, timestampdiff(minute, Planned_depart, Actual_take_off)-30 as f1 from hangban_pek where (timestampdiff(minute, Planned_depart, Actual_take_off)-30)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, f1 order by f1) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on t2.company=ai.IATA where ai.country='国内';
-- 长时间延误航班比例,空值算入统计，单独列出来, 按规则的计算方法
select t1.company, ai.chi_simple, f1 as 出港航班长时间延误时间, p1 as 航班数, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 出港航班长时间延误比例 from (select company, count(*) as p1, timestampdiff(minute, Planned_depart, Actual_take_off)-30 as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, f1 order by f1) as t1 right join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on t2.company=ai.IATA where ai.country='国内';
-- case when f1<=60 then t1.p1 when f1<120 and f1>60 then t1.p1 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1 when f1>=360 and f1<480 then t1.p1 when f1>=480 then t1.p1 end
-- case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 end
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组,空值不纳入延误时长分子统计，也就是不考虑空值问题, 首都机场计算方法
select t1.company, ai.chi_simple, f1 ,case when f1<=60 then t1.p1 when f1<120 and f1>60 then t1.p1 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1 when f1>=360 and f1<480 then t1.p1 when f1>=480 then t1.p1 end from (select company, count(*) as p1, timestampdiff(minute, Planned_depart, Actual_take_off)-30 as f1 from hangban_pek where (timestampdiff(minute, Planned_depart, Actual_take_off)-30)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内';
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组,空值算入统计，单独列出来, 按规则的计算方法
select t1.company, ai.chi_simple, f1 ,case when f1<=60 then t1.p1 when f1<120 and f1>60 then t1.p1 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1 when f1>=360 and f1<480 then t1.p1 when f1>=480 then t1.p1 else t1.p1 end from (select company, count(*) as p1, timestampdiff(minute, Planned_depart, Actual_take_off)-30 as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内';
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值不纳入延误时长分子统计，也就是不考虑空值问题, 首都机场计算方法
select tt1.com, tt1.chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where (timestampdiff(minute, Planned_depart, Actual_take_off)-30)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company group by com ;
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法
select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company group by com ;
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法,8-200架次
select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 between 8 and 199 group by com ;
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法,>=200架次
select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 >=200 group by com ;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 早出港始发航班起飞正常率，12月数据与公示一样
-- 早出港始发正常航班
select count(*) as 早出港始发正常航班 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and Early_depar_Initial = 'B' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常';
-- 早出港始发全部航班,要包含6小时内取消的，作为分母
select count(*) as 早出港始发全部航班 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay = '延误');
-- 早出港始发航班起飞正常率，12月数据与公示一样,公示数据  ,要包含6小时内取消的，作为分母
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 早出港始发航班正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子正常航班, t2.p2 as 分母全部航班  from (select count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and Early_depar_Initial = 'B' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t1, (select count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay = '延误')) as t2;
-- 早出港始发航班，超远机位占比  分母不包含取消的所有航班
select ai.chi_simple as 公司简称, t1.company as com, t1.p1 as 超远机位航班数, t2.p2 全部航班数, t1.p1/t2.p2 as 超远机位占比, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 百分数 from(select company, count(*) as p1 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay = '延误') group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company where ai.country='国内' order by t1.p1/t2.p2;
-- 国内公司早出港始发航班起飞正常率 ,8-200架次,分母不包含取消的所有航班，平均正常率
select round(avg(t1.p1/t2.p2),2) from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199 ;
-- 国内公司早出港始发航班起飞正常率 ,8-200架次 分母不包含取消的所有航班，>45%要乘以1.1  ，已经计算上超远机位占比加成
select ai.chi_simple as 公司简称, t1.company as com, round(t1.p1/t2.p2* if(t4.p4/t2.p2>0.45,1.1,1),2) as 加权后早出港始发航班正常率, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 原始早出港始发航班正常率 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company left join (select company, count(*) as p4 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t4 on t4.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199 order by t1.p1/t2.p2;
-- 国内公司早出港始发航班起飞正常率,200架次以上 ，分母不包含取消的所有航班,平均正常率
select round(avg(t1.p1/t2.p2),2) from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200 order by t1.p1/t2.p2;
-- 国内公司早出港始发航班起飞正常率,200架次以上  分母不包含取消的所有航班   >45%要乘以1.1  ，已经计算上超远机位占比加成
select ai.chi_simple as 公司简称, t1.company as com, round(t1.p1/t2.p2 * if(t4.p4/t2.p2>0.45,1.1,1),2) as 加权后早出港始发航班正常率, t1.p1/t2.p2,concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 原始早出港始发航班正常率 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company left join (select company, count(*) as p4 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t4 on t4.company=t2.company where ai.country='国内' and t3.p3 >= 200 order by t1.p1/t2.p2;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 过站航班放行正常率，12月数据与公示一样
-- 过站航班放行正常航班
select count(*) as 过站航班放行正常航班 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常';
-- 过站航班放行全部航班
select company, count(*) as 过站航班放行全部航班 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company;
-- 过站航班放行正常航班，按公司二字码和机型分组
select count(*) as 过站航班放行正常航班, company as 公司二字码 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company order by company desc;
-- 过站航班放行正常率
select concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率, t1.p1/t2.p2 as 原始数据, t1.p1 as 分子放行正常航班, t2.p2 as 分母放行全部航班 from (select count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t1 , (select count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常') as t2;
-- 国内公司过站航班放行正常率,8-200架次 平均正常率
select round(avg(t1.p1/t2.p2),2)  from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199;
-- 国内公司过站航班放行正常率,8-200架次 ,
select ai.chi_simple as 公司简称, t2.company, round(t1.p1/t2.p2,2), concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率 from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199;
-- 国内公司过站航班放行正常率,200架次以上 平均正常率
select round(avg(t1.p1/t2.p2),2) from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200;
-- 国内公司过站航班放行正常率,200架次以上
select ai.chi_simple as 公司简称, t2.company, round(t1.p1/t2.p2,2), concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率 from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 月度国内航空公司航班正常性综合考核,200架次以上
select ttt1.chi, ttt1.res1 as 机上延误航班比例分值, ttt1.res1*30 as 机上延误航班比例加权后, ttt2.res2 长时间延误航班比例分值, ttt2.res2*30 长时间延误航班比例加权后, ifnull(ttt3.res3, avg1.a1) as 早出港始发航班起飞正常率分值, ifnull(ttt3.res3, avg1.a1)*40 as 早出港始发航班起飞正常率加权后 ,ifnull(ttt4.res4,avg2.a2) as 过站航班放行正常率分值 ,ifnull(ttt4.res4,avg2.a2)*55 as 过站航班放行正常率加权后, (-ttt1.res1*30-ttt2.res2*30+ifnull(ttt3.res3, avg1.a1)*40 +ifnull(ttt4.res4,avg2.a2)*55 + 3.5) as total from
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法,>=200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res1 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 >=200 group by com) as ttt1 left join
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法,>=200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res2 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 >=200 group by com ) as ttt2  on ttt1.com=ttt2.com  left join
-- 国内公司早出港始发航班起飞正常率,200架次以上  分母不包含取消的所有航班   >45%要乘以1.1  ，已经计算上超远机位占比加成
(select ai.chi_simple as 公司简称, t1.company as com, round(t1.p1/t2.p2 * if(t4.p4/t2.p2>0.45,1.1,1),2) as res3, t1.p1/t2.p2,concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 原始早出港始发航班正常率 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company left join (select company, count(*) as p4 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t4 on t4.company=t2.company where ai.country='国内' and t3.p3 >= 200 order by t1.p1/t2.p2) as ttt3 on ttt1.com=ttt3.com left join
-- 国内公司过站航班放行正常率,200架次以上
(select ai.chi_simple as 公司简称, t2.company as com, round(t1.p1/t2.p2,2) as res4 , concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200) as ttt4 on ttt1.com=ttt4.com ,
-- 国内公司早出港始发航班起飞正常率,200架次以上 ，分母不包含取消的所有航班,平均正常率
(select round(avg(t1.p1/t2.p2),2) as a1 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200 order by t1.p1/t2.p2) as avg1,
-- 国内公司过站航班放行正常率,200架次以上 平均正常率
(select round(avg(t1.p1/t2.p2),2) as a2 from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 >= 200) as avg2 order by total desc;

-- -------------------------------------------------------
-- 月度国内航空公司航班正常性综合考核,8-200架次
-- ---------------------------------------------------
select ttt1.chi, ttt1.res1 as 机上延误航班比例分值, ttt1.res1*30 as 机上延误航班比例加权后, ttt2.res2 长时间延误航班比例分值, ttt2.res2*30 长时间延误航班比例加权后, ifnull(ttt3.res3, avg1.a1) as 早出港始发航班起飞正常率分值, ifnull(ttt3.res3, avg1.a1)*40 as 早出港始发航班起飞正常率加权后 ,ifnull(ttt4.res4,avg2.a2) as 过站航班放行正常率分值 ,ifnull(ttt4.res4,avg2.a2)*55 as 过站航班放行正常率加权后, (-ttt1.res1*30-ttt2.res2*30+ifnull(ttt3.res3, avg1.a1)*40 +ifnull(ttt4.res4,avg2.a2)*55 + 3.5) as total from
-- 出港航班机上延误时间,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和，空值算入统计，单独列出来, 按规则的计算方法,8-200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res1 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=30 then 0 when f1<60 and f1 >30 then t1.p1 when f1>=60 and f1<120 then t1.p1*2 when f1>=120 and f1<180 then t1.p1*4 when f1>=180 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, greatest(Closing_cabin_door, Closing_cargo_door), Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=30 then 1 when f1<60 and f1 >30 then 2 when f1>=60 and f1<120 then 3 when f1>=120 and f1<180 then 4 when f1>=180 then 5 else 6 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 between 8 and 199 group by com) as ttt1 left join
-- 长时间延误航班比例,分公司、按照条件将延误时间分为几组，然后综合计算，注意在上个表的基础上再次分组求和,空值算入统计，单独列出来, 按规则的计算方法,8-200架次
(select tt1.com as com, tt1.chi as chi, ifnull(t2.p2,0), round(sum(pp1)/t2.p2,2) as res2 from (select t1.company as com, ai.chi_simple as chi, f1 ,case when f1<=60 then 0 when f1<120 and f1>60 then t1.p1*0.5 when f1>=120 and f1<240 then t1.p1 when f1>=240 and f1<360 then t1.p1*3 when f1>=360 and f1<480 then t1.p1*6 when f1>=480 then t1.p1*8 else t1.p1*8 end as pp1 from (select company, count(*) as p1, (timestampdiff(minute, Planned_depart, Actual_take_off)-30) as f1 from hangban_pek where ifnull((timestampdiff(minute, Planned_depart, Actual_take_off)-30), 1)>0 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company, case when f1<=60 then 1 when f1<120 and f1>60 then 2 when f1>=120 and f1<240 then 3 when f1>=240 and f1<360 then 4 when f1>=360 and f1<480 then 5 when f1>=480 then 6 else 7 end) as t1  left join airline_info as ai on t1.company=ai.IATA where ai.country='国内') as tt1 left join (select company, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on tt1.com=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company  where t3.p3 between 8 and 199 group by com ) as ttt2 on ttt1.com=ttt2.com left join
-- 国内公司早出港始发航班起飞正常率 ,8-200架次 分母不包含取消的所有航班，>45%要乘以1.1  ，已经计算上超远机位占比加成
(select ai.chi_simple as 公司简称, t1.company as com, round(t1.p1/t2.p2 * if(t4.p4/t2.p2>0.45,1.1,1),2) as res3, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 原始早出港始发航班正常率 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company left join (select company, count(*) as p4 from hangban_pek where Apron in ('PN1', 'PN12', 'PN2', 'PM', 'P6', 'P7', 'P9') and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t4 on t4.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199 order by t1.p1/t2.p2) as ttt3 on ttt1.com=ttt3.com left join
-- 国内公司过站航班放行正常率,8-200架次 ,
(select ai.chi_simple as 公司简称, t2.company as com, round(t1.p1/t2.p2 ,2) as res4, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') as 过站航班放行正常率 from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199) as ttt4 on ttt1.com=ttt4.com ,
-- 国内公司早出港始发航班起飞正常率 ,8-200架次,分母不包含取消的所有航班，平均正常率
(select round(avg(t1.p1/t2.p2),2) as a1 from(select company, count(*) as p1 from hangban_pek where TIMESTAMPDIFF(MINUTE, Planned_depart, Actual_take_off) <= 30 and Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'B' and in_out_sign = '出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company = t2.company left join airline_info as ai on ai.IATA = t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199) as avg1,
-- 国内公司过站航班放行正常率,8-200架次 平均正常率
(select round(avg(t1.p1/t2.p2),2) as a2  from (select company, count(*) as p1 from hangban_pek where ((timestampdiff(minute, Planned_depart, Actual_take_off)<=30) or (timestampdiff(minute, Planned_arrival, Actual_arrival)>0 and timestampdiff(minute, Actual_arrival, Planned_depart)<case Model_Cate when 'C类' then 120 when 'D类' then 150 when 'E类' then 150 else 180 end and timestampdiff(minute, Actual_arrival, Actual_take_off)-timestampdiff(minute, Planned_arrival, Planned_depart)<=30)) and Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company, count(*) as p2 from hangban_pek where Early_depar_Initial = 'S' and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t2 on t1.company=t2.company left join airline_info as ai on ai.IATA=t2.company left join (select company, count(*) as p3 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t3 on t3.company=t2.company where ai.country='国内' and t3.p3 between 8 and 199) as avg2 order by total desc;



-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 航班起飞正常性考核
-- 起飞正常航班总班次
select company, count(*) as 起飞正常航班 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company;
-- 计划出港航班总班次,要算进去起飞6小时内取消的
select company, count(*) as 过站航班放行全部航班 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by company ;
--  国内，航班起飞正常率按公司,
select ai.chi_simple as 公司简称, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where ai.country ='国内' order by t1.p1/t2.p2 desc ;
-- 外国, 航班起飞正常率按公司, 过站航班放行全部航班>=60，表格中数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率 , ifnull(t1.p1/t2.p2,0) as 原始数据, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where ai.country !='国内' and t2.p2 >=60 order by t1.p1/t2.p2 desc ;
-- 外国, 航班起飞正常率按公司，过站航班放行全部航班在8-60之间，表格中数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率, ifnull(t1.p1/t2.p2,0)as 原始数据, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where ai.country !='国内' and t2.p2 between 8 and 59 order by t1.p1/t2.p2 desc ;
-- 外国, 航班起飞正常率按公司，过站航班放行全部航班在8以下，表格中数据
select ai.chi_simple as 公司简称, ifnull(t2.p2,0) 计划出港航班总班次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率, ifnull(t1.p1/t2.p2,0) as 原始数据, cp2 as 公司二字码, ifnull(t1.p1,0) 起飞正常航班 from ((select company as cp1, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by company) as t1 right join (select company as cp2, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消' and Take_off_Delay != '6h前取消') group by company) as t2 on t1.cp1=t2.cp2) left join airline_info as ai on t2.cp2=ai.IATA where ai.country !='国内' and t2.p2 < 8 order by t1.p1/t2.p2 desc ;
-- 外国, 航班起飞正常率按航班号,包含公司简称，机场中文名字
select ai.chi_simple as 公司简称,  t2.company, t2.terminal, ap.airport_chi, t2.flight_nb, ifnull(t2.p2,0) 计划出港航班总班次, ifnull(t1.p1,0) 起飞正常航班, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率 from (select flight_nb, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by flight_nb) as t1 right join (select company, terminal, flight_nb, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by flight_nb) as t2 on t1.flight_nb=t2.flight_nb left join airline_info as ai on t2.company=ai.IATA  left join airport_info as ap on t2.terminal=ap.IATA where ai.country='国内' and t2.p2>8 order by t1.p1/t2.p2 asc limit 15;
-- 国内, 航班起飞正常率按航班号,包含公司简称，机场中文名字，起飞6小时内取消的
select ai.chi_simple as 公司简称,  t2.company, t2.terminal, ap.airport_chi, t2.flight_nb, ifnull(t2.p2,0) 计划出港航班总班次, ifnull(t1.p1,0) 起飞正常航班, ifnull(can,0) as 取消架次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率 from (select flight_nb, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by flight_nb) as t1 right join (select company, terminal, flight_nb, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by flight_nb) as t2 on t1.flight_nb=t2.flight_nb left join (select flight_nb, count(*) as can from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '取消' and Take_off_Delay != '6h前取消' group by flight_nb) as t3 on t3.flight_nb=t2.flight_nb left join airline_info as ai on t2.company=ai.IATA  left join airport_info as ap on t2.terminal=ap.IATA where ai.country='国内' and t2.p2>8 order by t1.p1/t2.p2 asc limit 15;
-- 国内, 航班起飞正常率按航班号,包含公司简称，起飞6小时内取消的，表格中数据，且正常率小于50%的
select t2.flight_nb as 航班号, ifnull(t2.p2,0) 计划出港航班总班次,  ifnull(t1.p1,0) 起飞正常航班, ifnull(can,0) as 取消架次, concat(round(ifnull(t1.p1/t2.p2* 100,0),2),'%') 航班起飞正常率,  ai.chi_simple from (select flight_nb, count(*) as p1 from hangban_pek where timestampdiff(minute, Planned_depart, Actual_take_off)<=30 and in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '正常' group by flight_nb) as t1 right join (select company, flight_nb, count(*) as p2 from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and (Cancel_Status = '正常' or Cancel_Status = '取消'and Take_off_Delay != '6h前取消') group by flight_nb) as t2 on t1.flight_nb=t2.flight_nb left join (select flight_nb, count(*) as can from hangban_pek where in_out_sign='出港' and date between 20200401 and 20200430 and Cancel_Status = '取消' and Take_off_Delay != '6h前取消' group by flight_nb) as t3 on t3.flight_nb=t2.flight_nb left join airline_info as ai on t2.company=ai.IATA  where ai.country='国内' and t2.p2>8 and t1.p1/t2.p2<0.5 order by t1.p1/t2.p2 asc limit 15;
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 提前6小时（含）以上取消航班情况, 国内
select ai.chi_simple as 公司简称,  count(*) as 航班数, company as 公司二字码 from hangban_pek left join airline_info as ai on company=ai.IATA where ai.country='国内' and in_out_sign='出港' and date between 20200401 and 20200430 and Take_off_Delay = '6h前取消' group by company order by count(*) desc;
-- 提前6小时（含）以上取消航班情况, 国际
select ai.chi_simple as 公司简称, count(*) as 航班数, company as 公司二字码 from hangban_pek left join airline_info as ai on company=ai.IATA where ai.country!='国内' and in_out_sign='出港' and date between 20200401 and 20200430 and Take_off_Delay = '6h前取消' group by company order by count(*) desc;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 检测数据正确性的算法
-- 出港滑出时间是负数的（分钟）
select timestampdiff(minute, Actual_depart, Actual_take_off) as 实际起飞减去实际离港时间, count(*) as 出港滑出时间是负数的数量 from hangban_pek where in_out_sign='出港' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off)<=0 and Cancel_Status = '正常' and date between 20200401 and 20200430 group by timestampdiff(minute, Actual_depart, Actual_take_off) order by timestampdiff(minute, Actual_depart, Actual_take_off) desc;
-- 出港滑出时间是负数有多少班
select count(*) as 出港滑出时间是负数有多少班 from hangban_pek where in_out_sign='出港' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off)<=0 and Cancel_Status = '正常' and date between 20200401 and 20200430;
-- 实际起飞时间减去实际离港时间超过300分钟的情况（推出后5小时都不起飞的情况）
select date, flight_nb, timestampdiff(minute, Actual_depart, Actual_take_off) as 实际起飞时间减去实际离港时间超过300分钟的情况时间分钟, count(*) as 数量 from hangban_pek where timestampdiff(minute, Actual_depart, Actual_take_off)>=300 and date between 20200401 and 20200430 group by timestampdiff(minute, Actual_depart, Actual_take_off) order by timestampdiff(minute, Actual_depart, Actual_take_off);
-- RDY时间大于首次TSAT时间的情况，RDY时间减去首次TSAT时间的差值分钟
select timestampdiff(minute, First_TSAT, RDY_time) as costtime, count(*) as RDY时间减去首次TSAT时间的数量 from hangban_pek where RDY_time>=First_TSAT and in_out_sign='出港' and date between 20200401 and 20200430 group by costtime order by costtime;
-- 关舱门后（客舱门和货舱门最晚那个时间），距离首次READY时间超过5分钟的。
select (TIME_TO_SEC(greatest(Closing_cabin_door, Closing_cargo_door))-TIME_TO_SEC(First_RDY_time))/60 as 关舱门后距离首次READY时间分钟, count(*) as 数量 from hangban_pek where TIME_TO_SEC(greatest(Closing_cabin_door, Closing_cargo_door))-TIME_TO_SEC(First_RDY_time)>=300 and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430 group by TIME_TO_SEC(greatest(Closing_cabin_door, Closing_cargo_door))-TIME_TO_SEC(First_RDY_time) order by (TIME_TO_SEC(greatest(Closing_cabin_door, Closing_cargo_door))-TIME_TO_SEC(First_RDY_time));
-- 自己算早出港始发航班
select count(*) from hangban_pek where DATE_FORMAT(Planned_depart, '%H:%i') between '06:00' and '09:59' and timestampdiff(minute, Planned_arrival, Planned_depart)>=240 and in_out_sign='出港' and Cancel_Status = '正常' and date between 20200401 and 20200430;

select DATE_FORMAT(Planned_depart, '%H:%i');
-- 航班号前两个字母和公司二字码的差别
select * from hangban_pek where company != LEFT(Flight_nb, 2) and in_out_sign='出港' ;

select count(*) from hangban_pek where date between '20191102' and '2019-12-30';
select greatest('2019-12-17 14:36','2019-12-16 14:40')
-- 按照规则定义的早出港航班，计算出早出港标记，然后根据机场数据中的早出港始发标记，对比出不一样的，哪些是自己计算早出港，但机场算过站
select * from (select date, Planned_depart, Plan_Station, Flight_nb, Machine_nb, Early_depar_Initial, ROW_NUMBER() OVER (PARTITION BY date, Machine_nb ORDER BY Planned_depart) as rak from hangban_pek where time(Planned_depart) between '06:00:00' and '09:59:00' and Plan_Station > 240 and date between 20200401 and 20200430) b where b.rak = 1 and Early_depar_Initial != 'B';
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 查重复的数据（已经使用唯一约束在导入表格时候解决）
select count(*) as repetitions from hangban_pek group by date, Flight_nb, in_out_sign having repetitions > 1;
select * from hangban_pek where id in (select id from hangban_pek group by date, Flight_nb, in_out_sign having count(*)>1);

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
-- 解决表格中有空值的问题
select count(*) from hangban_pek where First_TSAT is null and in_out_sign='出港' and Cancel_Status = '正常' ;
select company, count(*) from hangban_pek where (Closing_cabin_door is null or Closing_cargo_door is null) and in_out_sign='出港' and Cancel_Status = '正常' group by company;
-- 当无关客舱门时间时用关货舱门时间，无关货舱门时间用客舱门时间代替。
update hangban_pek set Closing_cabin_door=Closing_cargo_door where Closing_cabin_door is null and in_out_sign='出港' ;
update hangban_pek set Closing_cargo_door=Closing_cabin_door where Closing_cargo_door is null and in_out_sign='出港' ;
-- 当无 REDY 时间时用实际关舱门时间代替
update hangban_pek set RDY_time=GREATEST(Closing_cabin_door, Closing_cargo_door) where RDY_time is null AND in_out_sign='出港'
-- 没有公司二字码的，用航班号前两位代替
update hangban_pek set company=left(flight_nb,2) where company is null;
-- 没有计划过站时间的，用计划离港减去计划到港代替
update hangban_pek set Plan_Station=timestampdiff(minute, Planned_arrival, Planned_depart) where Plan_Station is null;
-- 没有ASAT时间则用实际离港时间代替
update hangban_pek set ASAT=Actual_depart where ASAT is null and in_out_sign='出港';
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -



DELIMITER $$
CREATE PROCEDURE p1(IN time_start VARCHAR(25), IN time_end VARCHAR(25))
BEGIN
select avg(timestampdiff(minute, ATA, Actual_arrival)) as 进港平均滑入时间分钟 from hangban_pek where Actual_arrival is not null and ATA is not null and timestampdiff(minute, ATA, Actual_arrival) between 0 and 150 and in_out_sign='进港' and date between time_start and time_end;
select avg(timestampdiff(minute, Actual_depart, Actual_take_off)) as 出港平均滑出时间分钟 from hangban_pek where in_out_sign='出港' and Cancel_Status = '正常' and Actual_take_off is not null and Actual_depart is not null and timestampdiff(minute, Actual_depart, Actual_take_off) between 0 and 150 and date between time_start and time_end;
END$$
DELIMITER ;
